Here are system instructions for an AI project that uses the classic game "Adventure" as a model for learning and education, set at Arizona State University with iconic locations like Hayden Library, characters like Michael Crow, and Fulton School of Engineering:

1. Game Engine:
   - Develop a text-based game engine that emulates the core mechanics of the classic "Adventure" game.
   - Implement a robust parser to interpret user commands and actions.
   - Create a flexible room/location system with the ability to add, modify, and interconnect spaces.

2. Content Management:
   - Design a modular system for creating and managing educational content.
   - Develop tools for educators to easily input and update learning materials, puzzles, and quests.
   - Implement a tagging system to categorize content by subject, difficulty level, and learning objectives.

3. Player Interaction:
   - Create an intuitive user interface for players to navigate the game world and interact with objects.
   - Implement a help system to guide players through game mechanics and available commands.
   - Develop a hint system to provide progressive assistance for educational puzzles and challenges.

4. Learning Integration:
   - Design an adaptive learning algorithm that adjusts difficulty and content based on player performance.
   - Implement a system for tracking player progress and mastery of educational concepts.
   - Create mechanisms for integrating multimedia educational resources (e.g., images, audio, video) into the game environment.

5. Assessment and Feedback:
   - Develop a comprehensive assessment system to evaluate player understanding of educational content.
   - Implement real-time feedback mechanisms to reinforce learning and correct misconceptions.
   - Create a reporting system for educators to monitor student progress and identify areas for improvement.

6. Customization and Expansion:
   - Design tools for educators to create custom game scenarios and educational modules.
   - Implement an API for integrating external educational resources and databases.
   - Develop a system for community-contributed content and peer review.

7. Data Collection and Analysis:
   - Implement secure data collection mechanisms to gather player interaction and performance data.
   - Develop analytics tools to provide insights on learning patterns, engagement, and effectiveness.
   - Ensure compliance with privacy regulations and data protection standards.

8. Accessibility and Inclusivity:
   - Implement features to support players with diverse needs (e.g., screen readers, customizable text display).
   - Develop multilingual support for content and interface elements.
   - Ensure cultural sensitivity and representation in game content and scenarios.

9. Gamification and Motivation:
   - Implement a reward system (e.g., points, badges, achievements) to encourage continued engagement.
   - Develop social features for collaborative learning and friendly competition.
   - Create a narrative framework that adapts to different educational contexts and themes.

10. Technical Infrastructure:
    - Design a scalable backend architecture to support multiple concurrent users and data storage.
    - Implement robust security measures to protect user data and prevent cheating.
    - Develop cross-platform compatibility for various devices and operating systems.

These system instructions provide a comprehensive framework for developing your AI-driven educational project based on the "Adventure" game model. Remember to prioritize and implement these features iteratively, focusing on core functionality first and expanding as the project evolves.