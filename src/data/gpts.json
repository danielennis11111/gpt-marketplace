[
  {
    "id": "gpt-004",
    "name": "Plan with AI",
    "description": "Transform your ideas into well-defined project plans without any coding. This AI-powered assistant helps you brainstorm, define features, and create comprehensive project proposals with AI model recommendations.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Productivity",
    "tags": ["project planning", "AI assistance", "no-code", "documentation", "brainstorming"],
    "instructionsSnippet": "You are an AI project planning assistant that helps users transform their ideas into well-defined project plans...",
    "clonedCount": 892,
    "rating": 4.9,
    "reviewCount": 156,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/d127e308d80943adb9493ce1e3dac300",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Planning", "Content Creation", "Analysis"],
    "actions": ["Generate", "Create", "Analyze"],
    "version": "1.2.0",
    "dateCreated": "2025-05-25",
      "lastUpdated": "2025-05-29",
    "reviews": [],
    "exampleConversations": [
      {
        "user": "I have an idea for an AI project but don't know where to start",
        "assistant": "I'd be happy to help you plan your AI project! Could you tell me more about your idea and what you're trying to achieve?"
      },
      {
        "user": "What AI models would be best for my use case?",
        "assistant": "Let me help you select the right AI models. Could you describe your specific requirements and constraints?"
      }
    ]
  },
  {
    "id": "gpt-005",
    "name": "C-3PO Coding Helper",
    "description": "A polite, knowledgeable coding assistant inspired by C-3PO from Star Wars. C-3PO guides users through coding problems with explicit, step-by-step reasoning, code snippets, and a running thought process. Ideal for beginners and advanced users alike, C-3PO is especially helpful for those who want to see the 'why' behind every solution.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Development",
    "tags": ["coding", "education", "step-by-step", "AI assistant", "C-3PO", "Star Wars", "reasoning"],
    "instructionsSnippet": "You are a coding helper. All responses should include a section that captures your thought process, along with implementable code blocks in the relevant language and explicit step-by-step instructions...",
    "clonedCount": 312,
    "rating": 4.9,
    "reviewCount": 87,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/2afee586704c45fda29aea2eff30b485",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Learning", "Content Creation", "Analysis"],
    "actions": ["Generate", "Create", "Analyze"],
    "version": "1.0.0",
 "dateCreated": "2025-05-25",
      "lastUpdated": "2025-05-29",
    "reviews": [],
    "exampleConversations": [
      {
        "user": "I'm getting a TypeError in my React component",
        "assistant": "Oh my! A TypeError, you say? Let me help you debug this step by step. Could you share the error message and the relevant code?"
      },
      {
        "user": "How do I implement authentication in my app?",
        "assistant": "Ah, authentication! A most important security consideration. Let me guide you through the process, starting with the basic concepts..."
      }
    ]
  },
  {
    "id": "gpt-006",
    "name": "Adventure: ASU Edition",
    "description": "An AI-powered educational game inspired by the classic 'Adventure', set at Arizona State University. Explore iconic locations like Hayden Library and the Fulton School of Engineering, interact with ASU characters, and solve educational puzzles. Features adaptive learning, educator tools, and a robust assessment system.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Education",
    "tags": ["game", "education", "ASU", "adaptive learning", "text adventure", "gamification"],
    "instructionsSnippet": "Develop a text-based educational game engine modeled after 'Adventure', with modular content, adaptive learning, and robust assessment. Support educator customization, accessibility, and gamification. Prioritize core functionality and expand iteratively...",
    "clonedCount": 198,
    "rating": 4.8,
    "reviewCount": 54,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/2cfa3b82b62c4f5c9427cd652f4f2373",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Learning", "Content Creation", "Planning"],
    "actions": ["Create", "Track", "Generate"],
    "version": "1.0.0",
 "dateCreated": "2025-05-25",
      "lastUpdated": "2025-05-29",
    "reviews": [],
    "exampleConversations": [
      {
        "user": "I want to explore the Hayden Library",
        "assistant": "Welcome to Hayden Library! You find yourself in the grand entrance. To your left is the study area, to your right is the book stacks. Where would you like to go?"
      },
      {
        "user": "What's this puzzle about?",
        "assistant": "Ah, you've found a historical puzzle! This one is about ASU's founding. Would you like to solve it?"
      }
    ]
  },
  {
    "id": "gpt-007",
    "name": "Data Chatbot - ASU Analytics",
    "description": "An intelligent assistant that helps users navigate and understand the ASU Analytics Portal. Ask questions about data visualization, reports, or specific metrics, and get instant, accurate responses. Perfect for faculty, staff, and students who need quick insights from the analytics platform.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Analytics",
    "tags": ["data", "analytics", "business intelligence", "reporting", "asu"],
    "instructionsSnippet": "You are an expert in ASU's analytics platform. Help users understand data visualizations, reports, and metrics...",
    "clonedCount": 342,
    "rating": 4.8,
    "reviewCount": 156,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/815c8b9b41894365a78046f58d77a13e",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["Analysis", "Integration"],
    "actions": ["Generate", "Analyze"],
    "version": "2.1",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Sarah Chen",
        "rating": 5,
        "comment": "Incredibly helpful for navigating complex analytics dashboards. Saves me hours of work!"
      },
      {
        "user": "Prof. Michael Rodriguez",
        "rating": 4,
        "comment": "Great tool for quick data insights. Could use more documentation on advanced features."
      }
    ],
    "exampleConversations": [
      {
        "user": "How do I find enrollment trends?",
        "assistant": "I can help you access enrollment trend data. Would you like to see overall enrollment or specific program trends?"
      },
      {
        "user": "Show me the retention dashboard",
        "assistant": "I'll help you navigate to the retention dashboard. Would you like to see the overall retention rate or break it down by college?"
      }
    ]
  },
  {
    "id": "gpt-008",
    "name": "Superhuman Poet",
    "description": "An advanced AI poetry assistant that analyzes rhyme patterns, meter, and literary devices. Perfect for creative writing classes, poetry workshops, and literary analysis. Features include pattern recognition, style emulation, and detailed feedback on poetic techniques.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Education",
    "tags": ["poetry", "creative writing", "literature", "analysis", "education"],
    "instructionsSnippet": "You are a master of poetic forms and techniques. Analyze and generate poetry with attention to meter, rhyme, and literary devices...",
    "clonedCount": 187,
    "rating": 4.6,
    "reviewCount": 89,
    "verified": false,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/08f743efeadc4c5eacb3f8b7468a58be",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["Content Creation", "Analysis"],
    "actions": ["Generate", "Analyze"],
    "version": "1.5",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Prof. James Wilson",
        "rating": 5,
        "comment": "Revolutionary tool for teaching poetry. Students love the instant feedback!"
      }
    ],
    "exampleConversations": [
      {
        "user": "Can you analyze this sonnet's meter?",
        "assistant": "I'd be happy to analyze the meter of your sonnet. Could you share the poem?"
      },
      {
        "user": "Help me write a haiku about spring",
        "assistant": "Let's create a haiku together! Remember, it needs 5-7-5 syllables. What aspects of spring would you like to capture?"
      }
    ]
  },
  {
    "id": "gpt-009",
    "name": "Custom APIs for Non Coders",
    "description": "A user-friendly guide that helps non-technical users access and utilize various AI APIs through SSO integration. Includes pre-configured documentation for popular APIs like Gemini and OpenAI, with step-by-step instructions and best practices.",
    "creator": {
      "name": "ASU IT Services",
      "avatar": "/asu-logo.png"
    },
    "category": "Development",
    "tags": ["api", "integration", "sso", "documentation", "quickstart"],
    "instructionsSnippet": "Guide users through API integration using SSO, focusing on simplicity and security...",
    "clonedCount": 423,
    "rating": 4.7,
    "reviewCount": 198,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/897c892424ce42c6be770ed43ae43618",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["Integration", "Content Creation"],
    "actions": ["Configure", "Generate"],
    "version": "2.0",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Lisa Thompson",
        "rating": 5,
        "comment": "Finally, a way to use APIs without needing to code! Perfect for researchers."
      }
    ],
    "exampleConversations": [
      {
        "user": "How do I get started with the OpenAI API?",
        "assistant": "I'll guide you through setting up the OpenAI API. First, let's get your SSO credentials. Are you logged in to your ASU account?"
      },
      {
        "user": "Can you help me configure the Gemini API?",
        "assistant": "Of course! Let's set up the Gemini API. Would you like to start with the basic configuration or do you need specific features?"
      }
    ]
  },
  {
    "id": "gpt-010",
    "name": "Myers Briggs Simulator",
    "description": "An innovative AI project that simulates conversations between different Myers-Briggs personality types. Perfect for psychology classes, team building, and personality research. Features include multi-persona conversations and detailed personality analysis.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Research",
    "tags": ["personality", "simulation", "psychology", "team-building", "research"],
    "instructionsSnippet": "Simulate conversations between different Myers-Briggs personality types, maintaining authentic behavioral patterns...",
    "clonedCount": 256,
    "rating": 4.7,
    "reviewCount": 98,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/9a8b7c6d5e4f3g2h1i0j",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["Analysis", "Content Creation"],
    "actions": ["Generate", "Analyze"],
    "version": "1.0.0",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [],
    "exampleConversations": [
      {
        "user": "Can you simulate a conversation between an INTJ and an ENFP?",
        "assistant": "I'll create a simulated conversation between these personality types. Would you like to focus on a specific topic or scenario?"
      },
      {
        "user": "What are the key differences between these personality types?",
        "assistant": "Let me analyze the key differences between INTJ and ENFP personalities..."
      }
    ]
  },
  {
    "id": "gpt-011",
    "name": "Programming Language Converter",
    "description": "A powerful tool that converts code between different programming languages while maintaining functionality and best practices. Supports major languages including Python, JavaScript, Java, C++, and more. Perfect for learning new languages or migrating projects.",
    "creator": {
      "name": "ASU Computer Science",
      "avatar": "/asu-logo.png"
    },
    "category": "Development",
    "tags": ["programming", "code-conversion", "learning", "development"],
    "instructionsSnippet": "Convert code between programming languages while maintaining functionality and following best practices...",
    "clonedCount": 512,
    "rating": 4.5,
    "reviewCount": 234,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/60d87660681d424aa6ca78e258ab39ce",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["code-conversion", "syntax-analysis"],
    "actions": ["convert-code", "optimize-output"],
    "version": "2.2",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. John Smith",
        "rating": 4,
        "comment": "Very helpful for teaching multiple programming languages. Some edge cases need attention."
      }
    ],
    "exampleConversations": [
      {
        "user": "Convert this Python code to JavaScript",
        "assistant": "I'll help you convert your Python code to JavaScript. Could you share the code you'd like to convert?"
      },
      {
        "user": "How would this Java method look in C++?",
        "assistant": "I'll help you translate the Java method to C++. Please share the Java code you'd like to convert."
      }
    ]
  },
  {
    "id": "gpt-012",
    "name": "Musical Mood Translator",
    "description": "An innovative tool that translates emotional states and moods into musical structures. Perfect for composers, music therapy, and creative projects. Features include mood analysis, musical pattern generation, and export capabilities.",
    "creator": {
      "name": "Prof. David Miller",
      "avatar": "https://ui-avatars.com/api/?name=DM&background=random"
    },
    "category": "Music",
    "tags": ["music", "composition", "emotion", "therapy", "creativity"],
    "instructionsSnippet": "Translate emotional states into musical structures, considering tempo, key, and mood...",
    "clonedCount": 178,
    "rating": 4.7,
    "reviewCount": 92,
    "verified": false,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/35723ddd7d02497f96fde71797a0fe68",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["music-generation", "emotion-analysis"],
    "actions": ["generate-melody", "export-midi"],
    "version": "1.6",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Sarah Johnson",
        "rating": 5,
        "comment": "Revolutionary tool for music therapy. The emotional accuracy is impressive!"
      }
    ],
    "exampleConversations": [
      {
        "user": "Create a melody for a peaceful morning",
        "assistant": "I'll help you create a peaceful morning melody. Would you prefer a major or minor key? And what tempo feels right for your morning?"
      },
      {
        "user": "Translate this emotion into music",
        "assistant": "I'd be happy to translate your emotion into music. Could you describe the emotion you're feeling?"
      }
    ]
  },
  {
    "id": "gpt-013",
    "name": "Checklist Manifesto Guide",
    "description": "An AI implementation of the Checklist Manifesto methodology for process improvement and project management. Features include automated checklist generation, Jira integration, and process optimization suggestions.",
    "creator": {
      "name": "ASU Project Management Office",
      "avatar": "/asu-logo.png"
    },
    "category": "Project Management",
    "tags": ["checklists", "process-improvement", "project-management", "jira", "automation"],
    "instructionsSnippet": "Guide users through implementing checklist-based process improvements, with Jira integration...",
    "clonedCount": 289,
    "rating": 4.6,
    "reviewCount": 145,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/16fdbe14cfc04c9c97095480193a6a3b",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["process-analysis", "jira-integration"],
    "actions": ["generate-checklist", "export-to-jira"],
    "version": "1.9",
    "dateCreated": "2024-01-25",
    "lastUpdated": "2024-03-09",
    "reviews": [
      {
        "user": "Dr. Michael Brown",
        "rating": 4,
        "comment": "Great tool for standardizing processes. The Jira integration is particularly useful."
      }
    ],
    "exampleConversations": [
      {
        "user": "Create a checklist for our release process",
        "assistant": "I'll help you create a comprehensive release checklist. Would you like to include pre-release, release, and post-release steps?"
      },
      {
        "user": "How do I integrate this with Jira?",
        "assistant": "I'll guide you through the Jira integration. Do you already have a Jira project set up?"
      }
    ]
  },
  {
    "id": "gpt-014",
    "name": "MSBA Guide",
    "description": "A comprehensive guide for MSBA students and data professionals, offering assistance with coding languages, complex data analysis, and business intelligence concepts. Features include code examples, best practices, and real-world applications.",
    "creator": {
      "name": "ASU W.P. Carey School of Business",
      "avatar": "/asu-logo.png"
    },
    "category": "Education",
    "tags": ["msba", "data-science", "business-analytics", "education", "coding"],
    "instructionsSnippet": "Guide MSBA students through complex data and business concepts, with practical examples...",
    "clonedCount": 367,
    "rating": 4.8,
    "reviewCount": 189,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/1bdc9ad63b5c463e9a38c788f9654d43",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["code-examples", "concept-explanation"],
    "actions": ["generate-example", "explain-concept"],
    "version": "2.0",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Emily Chen",
        "rating": 5,
        "comment": "Invaluable resource for MSBA students. The practical examples are particularly helpful."
      }
    ],
    "exampleConversations": [
      {
        "user": "Explain the concept of regression analysis",
        "assistant": "I'll explain regression analysis in the context of business analytics. Would you like to focus on linear regression or explore other types?"
      },
      {
        "user": "Show me a Python example for data visualization",
        "assistant": "I'll provide a practical example using Python. Would you prefer to work with matplotlib, seaborn, or plotly?"
      }
    ]
  },
  {
    "id": "gpt-015",
    "name": "Small Language Model: Creative Writing Analysis",
    "description": "A specialized AI for analyzing and discussing works by Bukowski, Denis Johnson, Donald Barthelme, and David Foster Wallace. Features include detailed literary analysis, style comparison, and thematic exploration.",
    "creator": {
      "name": "Prof. Thomas Anderson",
      "avatar": "https://ui-avatars.com/api/?name=TA&background=random"
    },
    "category": "Literature",
    "tags": ["literature", "analysis", "creative-writing", "authors", "education"],
    "instructionsSnippet": "Analyze and discuss works by specific authors, focusing on style, themes, and literary devices...",
    "clonedCount": 156,
    "rating": 4.7,
    "reviewCount": 78,
    "verified": false,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/c308283763094f428944783a3116f2f5",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["text-analysis", "literary-criticism"],
    "actions": ["analyze-text", "compare-styles"],
    "version": "1.4",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Rachel Green",
        "rating": 5,
        "comment": "Excellent tool for teaching contemporary literature. The analysis is remarkably insightful."
      }
    ],
    "exampleConversations": [
      {
        "user": "Analyze this passage from Infinite Jest",
        "assistant": "I'll analyze the passage from David Foster Wallace's Infinite Jest. Could you share the specific passage you'd like to discuss?"
      },
      {
        "user": "Compare Bukowski's style with Barthelme's",
        "assistant": "I'll help you compare these distinct writing styles. Would you like to focus on specific works or their general approaches?"
      }
    ]
  },
  {
    "id": "gpt-016",
    "name": "Unblock and Focus",
    "description": "An AI writing assistant designed to help overcome mental blocks and maintain focus. Features include guided writing prompts, productivity techniques, and mindfulness exercises integrated with writing practice.",
    "creator": {
      "name": "ASU Counseling Services",
      "avatar": "/asu-logo.png"
    },
    "category": "Wellness",
    "tags": ["writing", "productivity", "mental-health", "focus", "wellness"],
    "instructionsSnippet": "Guide users through writing exercises to overcome mental blocks and improve focus...",
    "clonedCount": 234,
    "rating": 4.6,
    "reviewCount": 112,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/ea158d76c30b4a45bac86d902923670e",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["writing-prompts", "focus-techniques"],
    "actions": ["generate-prompt", "track-progress"],
    "version": "1.7",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Lisa Wong",
        "rating": 4,
        "comment": "Very helpful for students struggling with writer's block. The mindfulness integration is particularly effective."
      }
    ],
    "exampleConversations": [
      {
        "user": "I'm stuck on my thesis introduction",
        "assistant": "Let's work through your writer's block. Would you like to try some free-writing exercises or focus on structuring your thoughts?"
      },
      {
        "user": "Help me stay focused while writing",
        "assistant": "I'll guide you through some focus techniques. Would you like to start with a short mindfulness exercise?"
      }
    ]
  },
  {
    "id": "gpt-017",
    "name": "Historical Figure Simulator",
    "description": "An innovative AI project that enables multi-GPT conversations between historical figures. Perfect for history classes, team building, and personality research. Features include accurate historical context, personality simulation, and interactive dialogue.",
    "creator": {
      "name": "Prof. William Clark",
      "avatar": "https://ui-avatars.com/api/?name=WC&background=random"
    },
    "category": "History",
    "tags": ["history", "simulation", "education", "research", "dialogue"],
    "instructionsSnippet": "Simulate conversations between historical figures, maintaining historical accuracy and personality traits...",
    "clonedCount": 198,
    "rating": 4.8,
    "reviewCount": 95,
    "verified": false,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/bbc27ec5cd724bd8b918dd700d2cb24a",
    "canBeCloned": true,
    "feedbackWanted": true,
    "capabilities": ["historical-simulation", "dialogue-generation"],
    "actions": ["simulate-conversation", "analyze-context"],
    "version": "1.5",
    "dateCreated": "2025-05-25",
    "lastUpdated": "2025-05-29",
    "reviews": [
      {
        "user": "Dr. Robert Taylor",
        "rating": 5,
        "comment": "Fascinating tool for teaching history. Students love the interactive conversations!"
      }
    ],
    "exampleConversations": [
      {
        "user": "Simulate a conversation between Einstein and Newton",
        "assistant": "I'll create a simulated conversation between these scientific giants. Would you like to focus on their views on physics or their broader philosophical perspectives?"
      },
      {
        "user": "What would Marie Curie say about modern science?",
        "assistant": "I'll simulate Marie Curie's perspective on modern science. Would you like to focus on any particular field or discovery?"
      }
    ]
  },
  {
    "id": "ext-001",
    "name": "ASU AI Chatbot - Copy & Paste Extension",
    "description": "A complete copy-paste chatbot solution with ASU branding. Features multiple chatbot profiles, dropdown selector, sidebar interface, and responsive design. Just copy the JavaScript code and paste it into your website - no configuration needed!",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Extension",
    "tags": ["chatbot", "embed", "website", "integration", "copy-paste", "asu-branded", "multi-profile"],
    "instructionsSnippet": "SIMPLE COPY & PASTE CHATBOT INTEGRATION\n\nTwo easy ways to add the ASU AI Chatbot to your website:\n\nOption 1: Direct Script Embed\n<script src=\"asu-chatbot.js\"></script>\n\nOption 2: Inline Code\n<script>\n// Copy the entire JavaScript code from asu-chatbot.js\n// and paste it here\n</script>\n\nThat's it! The ASU chatbot button will appear bottom-right with full functionality.\n\nFEATURES INCLUDED:\n\n- Multiple Chatbot Profiles: ASU AI Assistant, Math Tutor, Writing Assistant, Research Helper\n- ASU Branded Design: Official ASU gradient colors (#8C1D40, #FFC425)\n- Responsive Interface: Works perfectly on desktop and mobile\n- Interactive Features: Dropdown profile selector, refresh option, new tab functionality\n- Zero Configuration: No API keys or setup required\n\nCUSTOMIZATION:\n\nTo add your own chatbots, edit the chatbotProfiles array in the JavaScript:\n\nconst chatbotProfiles = [\n    {\n        name: \"Your Custom Bot\",\n        description: \"Your description\", \n        url: \"https://your-chatbot-url.com\"\n    }\n];\n\nCurrent chatbot URLs point to: https://app-beta.aiml.asu.edu/2afee586704c45fda29aea2eff30b485\n\nSimply replace with your MyAI Builder chatbot URLs or any other chatbot service.\n\nPERFECT FOR:\n- Course websites and LMS integration\n- Department and faculty pages  \n- Student service portals\n- Research project sites\n- Any ASU-affiliated website\n\nClick 'Use Template' to download the asu-chatbot.js file and get started immediately!",
    "clonedCount": 1247,
    "rating": 4.9,
    "reviewCount": 203,
    "verified": true,
          "previewDemoLink": "/examples/copy-paste-solution/demo.html",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Website Integration", "Multi-AI Switching", "Customizable UI"],
    "actions": ["Embed", "Configure", "Switch AI"],
    "version": "2.1.0",
    "dateCreated": "2025-01-15",
    "lastUpdated": "2025-01-20",
    "reviews": [
      {
        "user": "Dr. Jennifer Martinez",
        "rating": 5,
        "comment": "Incredibly easy to implement! Had our chatbot running on our course website in under 5 minutes."
      },
      {
        "user": "Tech Support Lead",
        "rating": 5,
        "comment": "The ability to switch between different AI assistants is a game-changer for our support workflow."
      }
    ],
    "exampleConversations": [
      {
        "user": "How do I embed this on my WordPress site?",
        "assistant": "Just copy the provided HTML code and paste it into any page or post. The chatbot will automatically load and be ready to use!"
      },
      {
        "user": "Can I customize the appearance?",
        "assistant": "Yes! You can customize colors, position, size, and even add your own CSS. Check the configuration options in the documentation."
      }
    ]
  },
  {
    "id": "ext-002",
    "name": "ASU Local Wrapper - Enterprise AI Deployment",
    "description": "A comprehensive rate-limiting wrapper for running AI models locally with enterprise-level security and usage controls. Features voice interaction, file uploads, conversation templates, and robust governance. Perfect for organizations deploying AI tools with proper oversight.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Extension",
    "tags": ["local-deployment", "rate-limiting", "security", "enterprise", "wrapper", "governance", "voice-interaction", "file-upload"],
    "instructionsSnippet": "ENTERPRISE AI WRAPPER - LOCAL DEPLOYMENT\n\nComplete rate-limiting wrapper for secure AI deployment:\n\n## Quick Setup\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/danielennis11111/rate-limiter.git\ncd rate-limiter\nnpm install\n```\n\n2. Configure environment:\n```bash\ncp .env.example .env\n# Edit .env with your API keys and settings\n```\n\n3. Start the wrapper:\n```bash\nnpm run dev\n```\n\n## Key Features\n\n✅ **Rate Limiting**: 15 requests/minute with visual feedback\n✅ **Voice Interaction**: Speech-to-text and text-to-speech support\n✅ **File Upload Support**: PDF and image processing\n✅ **11 AI Templates**: Pre-configured conversation templates\n✅ **Security Controls**: Enterprise-grade logging and monitoring\n✅ **Multi-Provider Support**: OpenAI, Anthropic, Google Gemini\n✅ **Conversation History**: Sidebar with conversation management\n✅ **Responsive Design**: Works on desktop and mobile\n\n## Configuration\n\nEdit `src/config/models.js` to add your API providers:\n\n```javascript\nconst models = {\n  openai: {\n    provider: 'openai',\n    model: 'gpt-4',\n    apiKey: process.env.OPENAI_API_KEY\n  },\n  gemini: {\n    provider: 'google',\n    model: 'gemini-1.5-pro',\n    apiKey: process.env.GEMINI_API_KEY\n  }\n};\n```\n\n## Available Templates\n\n1. General Assistant - Helpful AI assistant\n2. Creative Writing - Story and content creation\n3. Programming Mentor - Code review and guidance\n4. Academic Tutor - Subject-specific tutoring\n5. Research Assistant - Research and analysis\n6. Language Learning - Language practice\n7. Business Advisor - Strategy and planning\n8. Health & Wellness - General wellness guidance\n9. Technical Support - IT and tech help\n10. Data Analyst - Data analysis and visualization\n11. Project Manager - Project planning and management\n\n## Security Features\n\n- Request rate limiting with visual feedback\n- API key encryption and secure storage\n- User session management\n- Enterprise logging and audit trails\n- Conversation data protection\n- Configurable usage controls\n\n## Deployment Options\n\n- **Local Development**: npm run dev\n- **Production**: npm run build && npm start\n- **Docker**: docker-compose up\n- **Cloud**: Deploy to AWS, Azure, or GCP\n\nPerfect for universities, enterprises, and organizations requiring controlled AI deployment with comprehensive governance and security.",
    "clonedCount": 892,
    "rating": 4.7,
    "reviewCount": 156,
    "verified": true,
    "previewDemoLink": "https://danielennis11111.github.io/rate-limiter/",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Rate Limiting", "Voice Interaction", "File Upload", "Multi-Provider", "Enterprise Security"],
    "actions": ["Clone", "Deploy", "Configure"],
    "version": "1.3.2",
    "dateCreated": "2024-11-10",
    "lastUpdated": "2025-01-20",
    "reviews": [
      {
        "user": "IT Security Manager",
        "rating": 5,
        "comment": "Exactly what we needed for enterprise AI deployment. The security controls and rate limiting are comprehensive."
      },
      {
        "user": "DevOps Engineer",
        "rating": 4,
        "comment": "Easy to set up and configure. The voice interaction and file upload features are impressive."
      },
      {
        "user": "University CTO",
        "rating": 5,
        "comment": "Perfect for our campus deployment. The conversation templates and governance features saved us months of development."
      }
    ],
    "exampleConversations": [
      {
        "user": "How do I set rate limits for different user groups?",
        "assistant": "Configure rate limits in the config.yml file. You can set different limits for admin, faculty, and student groups with granular controls."
      },
      {
        "user": "Can this work with cloud deployments?",
        "assistant": "Yes! While designed for local deployment, it supports hybrid cloud setups with proper configuration and maintains all security features."
      },
      {
        "user": "What file types can I upload?",
        "assistant": "The wrapper supports PDF documents and images (PNG, JPG, GIF). Files are processed locally for security and can be analyzed by the AI."
      }
    ]
  },
  {
    "id": "model-001",
    "name": "Gemma 3 - Google's Multimodal LLM",
    "description": "Google's latest open-weight LLM with multimodal capabilities. Available in 1B, 4B, 12B, and 27B parameters with support for images, text, and 140+ languages. Features 128k context window and state-of-the-art performance.",
    "creator": {
      "name": "Google DeepMind",
      "avatar": "https://ui-avatars.com/api/?name=Google&background=4285f4"
    },
    "category": "Local Model",
    "tags": ["gemma", "google", "multimodal", "local-model", "ollama", "huggingface"],
    "instructionsSnippet": "# Install with Ollama\nollama pull gemma3:4b\n# Or download from HuggingFace\nhuggingface-cli download google/gemma-3-4b-it\n# Use with transformers\nfrom transformers import AutoModelForCausalLM, AutoTokenizer",
    "clonedCount": 3421,
    "rating": 4.9,
    "reviewCount": 756,
    "verified": true,
    "previewDemoLink": "https://huggingface.co/blog/gemma3",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Multimodal Processing", "140+ Languages", "Long Context"],
    "actions": ["Download", "Install", "Deploy"],
    "version": "3.0",
    "dateCreated": "2025-03-12",
    "lastUpdated": "2025-03-12",
    "reviews": [
      {
        "user": "ML Engineer",
        "rating": 5,
        "comment": "Exceptional performance for the size. The multimodal capabilities are impressive and the context window is huge!"
      },
      {
        "user": "Research Scientist",
        "rating": 5,
        "comment": "Best open-weight model I've used. The multilingual support is outstanding."
      }
    ],
    "exampleConversations": [
      {
        "user": "How do I run Gemma 3 locally?",
        "assistant": "You can use Ollama for easy setup: 'ollama pull gemma3:4b' or download directly from HuggingFace and use with transformers."
      },
      {
        "user": "What hardware do I need for the 27B model?",
        "assistant": "For the 27B model, you'll need at least 32GB RAM and preferably a GPU with 24GB+ VRAM for optimal performance."
      }
    ]
  },
  {
    "id": "model-002", 
    "name": "Llama 3.3 - Meta's Open Foundation Model",
    "description": "Meta's latest Llama model with improved reasoning, coding, and multilingual capabilities. Available for download with commercial license. Optimized for both research and production use with excellent performance across benchmarks.",
    "creator": {
      "name": "Meta AI",
      "avatar": "https://ui-avatars.com/api/?name=Meta&background=1877f2"
    },
    "category": "Local Model", 
    "tags": ["llama", "meta", "foundation-model", "commercial-license", "ollama", "local-deployment"],
    "instructionsSnippet": "# Download from official source\nwget https://www.llama.com/llama-downloads/\n# Or use Ollama\nollama pull llama3.3:8b\n# With transformers\nfrom transformers import LlamaForCausalLM, LlamaTokenizer",
    "clonedCount": 4892,
    "rating": 4.8,
    "reviewCount": 1023,
    "verified": true,
    "previewDemoLink": "https://www.llama.com/llama-downloads/",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Advanced Reasoning", "Code Generation", "Multilingual"],
    "actions": ["Download", "License", "Deploy"],
    "version": "3.3",
    "dateCreated": "2024-12-15",
    "lastUpdated": "2025-01-10",
    "reviews": [
      {
        "user": "Senior Developer",
        "rating": 5,
        "comment": "Incredible coding capabilities. The commercial license makes it perfect for enterprise use."
      },
      {
        "user": "AI Product Manager",
        "rating": 4,
        "comment": "Solid performance and the licensing terms are very reasonable for commercial applications."
      }
    ],
    "exampleConversations": [
      {
        "user": "What's the licensing for commercial use?",
        "assistant": "Llama 3.3 comes with a custom commercial license that allows commercial use. Check the official license terms on the download page."
      },
      {
        "user": "How does this compare to Gemma 3?",
        "assistant": "Both are excellent! Llama 3.3 excels in reasoning and coding, while Gemma 3 offers multimodal capabilities. Choose based on your specific needs."
      }
    ]
  },
  {
    "id": "tutorial-001",
    "name": "Complete Gemini API Setup Guide",
    "description": "A comprehensive step-by-step tutorial for setting up Google's Gemini API with the ASU Local Wrapper. Learn how to get your API key, configure the wrapper, and deploy a fully functional local chatbot with rate limiting and security controls.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Tutorial",
    "tags": ["gemini-api", "api-setup", "local-wrapper", "chatbot", "tutorial", "step-by-step"],
    "instructionsSnippet": "## Complete Gemini API Setup Guide\n\n**Follow these detailed step-by-step instructions to get your Gemini AI chatbot running in under 30 minutes.**\n\n## Step 1: Get Your Gemini API Key\n\n### 1.1 Create Google AI Studio Account\n1. Open your web browser and go to **https://ai.google.dev/**\n2. Click the **\"Get API Key\"** button in the top right\n3. Sign in with your Google account (personal or work account both work)\n4. Accept the Terms of Service when prompted\n\n### 1.2 Create a New Project\n1. Once logged in, click **\"Create API Key\"**\n2. Select **\"Create API key in new project\"** (recommended for beginners)\n3. Give your project a meaningful name like \"My AI Chatbot\"\n4. Click **\"Create\"**\n\n### 1.3 Save Your API Key Securely\n1. **IMPORTANT**: Copy the API key that appears (starts with \"AI...\")\n2. Save it in a secure text file - you'll need it in Step 3\n3. **Never share this key publicly** - treat it like a password\n\n### 🎥 Complex Concept: Understanding Gemini API Structure\n### 🎯 [Introduction to Gemini APIs and AI Studio](https://www.youtube.com/watch?v=4oyqd7CB09c)\n*Official Google tutorial showing the exact steps above - watch if you get stuck*\n\n**⚠️ Important Notes:**\n- The API key is free for most usage (15 requests per minute)\n- You may need to verify your phone number\n- Keep the browser tab open - we'll verify the setup later\n\n## Step 2: Download & Setup ASU Local Wrapper\n\n### 2.1 Install Prerequisites\n**Before starting, ensure you have:**\n- Node.js 16+ installed (download from https://nodejs.org/)\n- Git installed (download from https://git-scm.com/)\n- A text editor (VS Code recommended)\n\n### 2.2 Clone the Repository\n1. Open your **Terminal** (Mac/Linux) or **Command Prompt** (Windows)\n2. Navigate to where you want to install (e.g., `cd Desktop`)\n3. Run the following commands one by one:\n\n```bash\ngit clone https://github.com/danielennis11111/rate-limiter\ncd rate-limiter\nnpm install\n```\n\n**What's happening:**\n- `git clone` downloads the code to your computer\n- `cd rate-limiter` enters the project folder\n- `npm install` downloads all required dependencies (takes 2-3 minutes)\n\n## Step 3: Configure Your Environment\n\n### 3.1 Create Environment File\n1. In the `rate-limiter` folder, copy the example file:\n\n```bash\ncp .env.example .env\n```\n\n**Windows users**: If that doesn't work, manually:\n1. Find the `.env.example` file\n2. Copy it and rename the copy to `.env`\n\n### 3.2 Add Your API Key\n1. Open the `.env` file in your text editor\n2. Find the line that says `GEMINI_API_KEY=`\n3. Replace it with your actual key:\n\n```env\nGEMINI_API_KEY=AI...your_actual_key_here\nRATE_LIMIT_PER_MINUTE=15\nPORT=3000\n```\n\n4. Save the file\n\n**🔐 Security Note**: The `.env` file stays on your computer and is never uploaded anywhere.\n\n## Step 4: Configure Gemini Integration\n\n### 4.1 Update Model Configuration\n1. Open `src/config/models.js` in your text editor\n2. Add or update the Gemini configuration:\n\n```javascript\nconst models = {\n  gemini: {\n    provider: 'google',\n    model: 'gemini-1.5-pro',\n    apiKey: process.env.GEMINI_API_KEY,\n    maxTokens: 8192,\n    temperature: 0.7,\n    features: ['text', 'multimodal', 'reasoning']\n  }\n};\n\nmodule.exports = models;\n```\n\n**What each setting means:**\n- `model`: Which Gemini version to use (1.5-pro is most capable)\n- `maxTokens`: Maximum response length (8192 is generous)\n- `temperature`: Creativity level (0.7 = balanced, 0.1 = focused, 0.9 = creative)\n\n## Step 5: Start Your AI Chatbot\n\n### 5.1 Launch the Development Server\n1. In your terminal, make sure you're in the `rate-limiter` folder\n2. Run:\n\n```bash\nnpm run dev\n```\n\n3. Wait for the message: `Server running on http://localhost:3000`\n4. Open your web browser and go to **http://localhost:3000**\n\n### 5.2 Verify Everything Works\n**You should see:**\n- ✅ A professional ASU-branded interface\n- ✅ Multiple conversation templates\n- ✅ Rate limiting indicator (15/15 requests available)\n- ✅ Clean, modern design\n\n## Step 6: Test Your Gemini Integration\n\n### 6.1 Basic Functionality Test\n1. Click on the **\"General Assistant\"** template\n2. Type a simple question: `Hello! Can you help me write an email?`\n3. Click Send or press Enter\n4. **Expected result**: You should get a helpful response from Gemini\n\n### 6.2 Advanced Feature Test\n1. Try uploading an image (if you have one)\n2. Ask: `What do you see in this image?`\n3. **Expected result**: Gemini should describe the image contents\n\n### 6.3 Rate Limiting Test\n1. Send several messages quickly\n2. **Expected result**: After 15 messages, you should see a rate limit warning\n3. Wait 1 minute, and the limit should reset\n\n## Troubleshooting Common Issues\n\n### ❌ \"API Key Invalid\" Error\n**Symptoms**: Error message about invalid API key\n**Solutions**:\n1. Double-check your API key in the `.env` file\n2. Ensure there are no extra spaces or quotes\n3. Verify the key starts with \"AI\" and has no line breaks\n4. Try generating a new API key from Google AI Studio\n\n### ❌ \"Command not found\" Errors\n**Symptoms**: `npm` or `git` commands don't work\n**Solutions**:\n1. Install Node.js from https://nodejs.org/\n2. Install Git from https://git-scm.com/\n3. Restart your terminal after installation\n4. On Windows, try running as Administrator\n\n### ❌ Port Already in Use\n**Symptoms**: Error about port 3000 being in use\n**Solutions**:\n1. Change the port in your `.env` file: `PORT=3001`\n2. Or kill the existing process and try again\n\n### ❌ Slow or No Responses\n**Symptoms**: Gemini takes forever to respond or doesn't respond\n**Solutions**:\n1. Check your internet connection\n2. Verify your API key hasn't exceeded quota\n3. Try a different browser\n4. Check the browser console for error messages (F12)\n\n## Advanced Configuration\n\n### 🔧 Customizing Rate Limits\nEdit your `.env` file:\n```env\nRATE_LIMIT_PER_MINUTE=30    # Increase to 30 requests per minute\nRATE_LIMIT_PER_HOUR=1000    # Set hourly limit\nRATE_LIMIT_PER_DAY=5000     # Set daily limit\n```\n\n### 🎨 Customizing the Interface\n1. **Logo**: Replace `public/asu-logo.png` with your logo\n2. **Colors**: Edit `tailwind.config.js` for color schemes\n3. **Templates**: Add custom templates in `src/data/templates.js`\n\n### 🔐 Production Security\nFor production deployment:\n\n```env\n# Production settings\nHTTPS_ENABLED=true\nSSL_CERT_PATH=/path/to/cert.pem\nSSL_KEY_PATH=/path/to/key.pem\nENVIRONMENT=production\nLOG_LEVEL=info\n```\n\n## Next Steps\n\n### 🚀 **Immediate Actions:**\n1. ✅ Test different conversation templates\n2. ✅ Try uploading various file types (PDFs, images)\n3. ✅ Experiment with voice features (click microphone icon)\n4. ✅ Explore the settings panel (gear icon)\n\n### 🛠️ **Customization Ideas:**\n- Create department-specific conversation templates\n- Add your organization's branding and colors\n- Set up user authentication for team use\n- Configure automated backups of conversations\n\n### 🏢 **Enterprise Deployment:**\n- Set up SSL certificates for secure access\n- Configure load balancing for multiple users\n- Implement user role management\n- Set up monitoring and analytics\n\n### 📚 **Learn More:**\n- Check out our **Multi-API Tutorial** to add Claude and OpenAI\n- Try the **Local Llama Guide** for completely offline AI\n- Explore the **ASU Wrapper User Guide** for advanced features\n\n**🎉 Congratulations!** You now have a fully functional, enterprise-grade AI chatbot powered by Google Gemini. The setup provides privacy, security, and complete control over your AI interactions.\n\n**Need Help?** Visit our GitHub repository for issues and community support: https://github.com/danielennis11111/rate-limiter",
    "clonedCount": 1245,
    "rating": 4.9,
    "reviewCount": 287,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/tutorial-gemini-setup",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Step-by-Step Guide", "API Integration", "Local Deployment"],
    "actions": ["Follow", "Configure", "Deploy"],
    "version": "2.1.0",
    "dateCreated": "2025-01-15",
    "lastUpdated": "2025-01-20",
    "reviews": [
      {
        "user": "Dr. Sarah Mitchell",
        "rating": 5,
        "comment": "Incredibly detailed tutorial! Got my chatbot running in under 30 minutes. The troubleshooting section saved me time."
      },
      {
        "user": "IT Administrator",
        "rating": 5,
        "comment": "Perfect for enterprise deployment. Security considerations are well covered."
      },
      {
        "user": "Graduate Student",
        "rating": 4,
        "comment": "Great guide, though some steps could use more explanation for beginners."
      }
    ],
    "exampleConversations": [
      {
        "user": "How long does setup usually take?",
        "assistant": "Most users complete the setup in 20-30 minutes. The API key setup takes 5 minutes, and the wrapper configuration takes 15-25 minutes depending on your experience level."
      },
      {
        "user": "Do I need a paid Google Cloud account?",
        "assistant": "Gemini API has a generous free tier that's perfect for getting started. You only need paid billing for high-volume usage."
      },
      {
        "user": "Can I use this for production?",
        "assistant": "Yes! The ASU Local Wrapper is designed for production use with enterprise security features. Just follow the production deployment steps in the guide."
      }
    ]
  },
  {
    "id": "tutorial-002",
    "name": "Multi-API Chatbot: Gemini, Anthropic & OpenAI Setup",
    "description": "Advanced tutorial for creating a unified chatbot that supports multiple AI providers. Learn to configure Gemini, Claude (Anthropic), and ChatGPT (OpenAI) APIs in a single ASU Local Wrapper deployment with intelligent routing and failover.",
    "creator": {
      "name": "ASU Enterprise Technology", 
      "avatar": "/asu-logo.png"
    },
    "category": "Tutorial",
    "tags": ["multi-api", "gemini", "anthropic", "openai", "claude", "chatgpt", "advanced-setup"],
    "instructionsSnippet": "## 📹 Essential Video Tutorials\n\n**Master Multi-API Integration with these comprehensive guides:**\n\n### 🎯 [How to build a Multi Model Chatbot w OpenAI Grok Llama 3.1](https://www.youtube.com/watch?v=TquB5ax-dDI)\n*Complete tutorial on building multi-model chatbots with different AI providers*\n\n### 🚀 [Openai Multi-Model Voice Chatbot - Langchain, Whisper, TTS, Grok, Llama 3.1, Claude Sonet 3.5 GPT 4o](https://www.youtube.com/watch?v=5oC_rXMEjHY)\n*Advanced multi-model setup with voice capabilities and multiple AI providers*\n\n### 💡 [The FASTEST Way to Build AI Chatbot in Next.js with OpenAI and Gemini](https://www.youtube.com/watch?v=3jaCoKHLEZ8)\n*Quick setup guide for integrating multiple AI APIs*\n\n### 🔧 [OpenAI vs Gemini vs Claude for AI Chatbots in 2024](https://www.youtube.com/watch?v=8-s0pDKg5Xo)\n*Comparison guide to help you choose the right AI provider for your needs*\n\n### 🎓 [A Beginner's Guide to Using the ChatGPT API in 2024](https://www.youtube.com/watch?v=E0ieEO8VQpk)\n*Essential guide for OpenAI API setup and usage*\n\n---\n\n## Overview: Multi-Provider AI Chatbot\n\nThis tutorial covers setting up a chatbot that can use multiple AI providers:\n- 🤖 **Google Gemini** - Excellent for reasoning and multimodal tasks\n- 🧠 **Anthropic Claude** - Superior for analysis and safety\n- 💬 **OpenAI GPT** - Great for conversation and creativity\n\n**🎬 Watch the videos above for visual walkthroughs of each setup process!**\n\n## Step 1: Gather All API Keys\n\n**You'll need API keys from each provider you want to use. Follow these detailed steps:**\n\n### 1.1 Google Gemini API Key\n1. **Visit https://ai.google.dev/**\n2. **Sign in** with your Google account\n3. **Click \"Get API Key\"** in the top right\n4. **Create new project** or select existing one\n5. **Copy your API key** (starts with \"AI...\")\n6. **Save securely** - you'll need it later\n\n### 1.2 Anthropic Claude API Key\n1. **Go to https://console.anthropic.com/**\n2. **Create account** or sign in\n3. **Navigate to \"API Keys\"** in left sidebar\n4. **Click \"Create Key\"**\n5. **Name your key** (e.g., \"ASU Wrapper\")\n6. **Copy the key** (starts with \"sk-ant-\")\n7. **Store safely** - you can't view it again\n\n### 1.3 OpenAI API Key\n1. **Visit https://platform.openai.com/**\n2. **Sign in** to your OpenAI account\n3. **Click \"API Keys\"** in left menu\n4. **Create new secret key**\n5. **Name your key** descriptively\n6. **Copy immediately** (starts with \"sk-\")\n7. **Save securely** - this is your only chance to copy it\n\n### 🎥 Complex Concept: Managing Multiple API Keys Securely\n### 🎯 [OpenAI API Tutorial For Beginners](https://www.youtube.com/watch?v=9zC-KguA15c)\n*Detailed walkthrough of API key creation and management*\n\n**⚠️ Security Notes:**\n- Never share API keys publicly\n- Each key has usage costs - monitor spending\n- Set spending limits in each provider's dashboard\n- Store keys in environment variables, never in code\n\n## Step 2: Clone and Setup ASU Local Wrapper\n\n```bash\ngit clone https://github.com/danielennis11111/rate-limiter\ncd rate-limiter\nnpm install\n```\n\n## Step 3: Configure Multiple Providers\n\nCreate your environment configuration:\n\n```bash\ncp .env.example .env.multi-provider\n```\n\nEdit `.env.multi-provider`:\n\n```env\n# API Keys\nGEMINI_API_KEY=your_gemini_key_here\nANTHROPIC_API_KEY=your_claude_key_here\nOPENAI_API_KEY=your_openai_key_here\n\n# Rate Limiting (per provider)\nRATE_LIMIT_GEMINI=15\nRATE_LIMIT_ANTHROPIC=10\nRATE_LIMIT_OPENAI=20\n\n# Default Provider\nDEFAULT_PROVIDER=gemini\n\n# Failover Configuration\nENABLE_FAILOVER=true\nFAILOVER_ORDER=gemini,anthropic,openai\n\n# Server Configuration\nPORT=3000\nENVIRONMENT=development\n```\n\n## Step 4: Update Model Configuration\n\nEdit `src/config/multi-models.js`:\n\n```javascript\nconst providers = {\n  gemini: {\n    name: 'Google Gemini',\n    provider: 'google',\n    models: {\n      'gemini-1.5-pro': {\n        apiKey: process.env.GEMINI_API_KEY,\n        maxTokens: 8192,\n        temperature: 0.7,\n        supportedFeatures: ['text', 'image', 'multimodal']\n      }\n    },\n    rateLimit: process.env.RATE_LIMIT_GEMINI || 15\n  },\n  \n  anthropic: {\n    name: 'Anthropic Claude',\n    provider: 'anthropic',\n    models: {\n      'claude-3-sonnet': {\n        apiKey: process.env.ANTHROPIC_API_KEY,\n        maxTokens: 4096,\n        temperature: 0.7,\n        supportedFeatures: ['text', 'analysis', 'reasoning']\n      }\n    },\n    rateLimit: process.env.RATE_LIMIT_ANTHROPIC || 10\n  },\n  \n  openai: {\n    name: 'OpenAI GPT',\n    provider: 'openai',\n    models: {\n      'gpt-4-turbo': {\n        apiKey: process.env.OPENAI_API_KEY,\n        maxTokens: 4096,\n        temperature: 0.8,\n        supportedFeatures: ['text', 'conversation', 'creativity']\n      }\n    },\n    rateLimit: process.env.RATE_LIMIT_OPENAI || 20\n  }\n};\n```\n\n## Step 5: Advanced Template Configuration\n\nCreate specialized templates for each provider in `src/data/multi-templates.js`:\n\n```javascript\nconst templates = [\n  {\n    id: 'analysis-claude',\n    name: 'Deep Analysis (Claude)',\n    provider: 'anthropic',\n    model: 'claude-3-sonnet',\n    description: 'Use Claude for detailed analysis and reasoning tasks',\n    systemPrompt: 'You are Claude, an AI assistant specialized in thorough analysis...'\n  },\n  {\n    id: 'creative-gpt',\n    name: 'Creative Writing (GPT)',\n    provider: 'openai', \n    model: 'gpt-4-turbo',\n    description: 'Use GPT-4 for creative and conversational tasks',\n    systemPrompt: 'You are a creative AI assistant specialized in storytelling...'\n  },\n  {\n    id: 'multimodal-gemini',\n    name: 'Multimodal Assistant (Gemini)',\n    provider: 'gemini',\n    model: 'gemini-1.5-pro',\n    description: 'Use Gemini for text, image, and multimodal tasks',\n    systemPrompt: 'You are Gemini, a multimodal AI assistant...'\n  },\n  {\n    id: 'intelligent-router',\n    name: 'Smart Router (All Providers)',\n    provider: 'auto',\n    description: 'Automatically choose the best AI for each task',\n    systemPrompt: 'Route queries to the most appropriate AI provider based on task type'\n  }\n];\n```\n\n## Step 6: Start Your Multi-Provider Chatbot\n\n```bash\nnpm run dev:multi-provider\n```\n\n## Step 7: Test Each Provider\n\n1. **Test Gemini**: \"Analyze this image and tell me what you see\"\n2. **Test Claude**: \"Provide a detailed analysis of climate change impacts\"\n3. **Test GPT**: \"Write a creative story about AI and humans\"\n4. **Test Auto-Router**: \"Help me plan a vacation\" (automatically routes to best provider)\n\n## Advanced Features\n\n### Intelligent Provider Routing\nThe system automatically chooses the best AI based on:\n- **Images/Files**: Routes to Gemini (multimodal)\n- **Analysis Tasks**: Routes to Claude (reasoning)\n- **Creative Tasks**: Routes to GPT (creativity)\n- **General Questions**: Uses default or load balances\n\n### Failover Protection\nIf one provider fails:\n1. System automatically tries next provider in failover order\n2. User receives seamless experience\n3. Errors are logged for monitoring\n\n### Usage Analytics\nMonitor usage across providers:\n```bash\nnpm run analytics:providers\n```\n\n### Cost Optimization\nConfigure cost-based routing:\n```javascript\nconst costOptimization = {\n  gemini: { costPerToken: 0.00001 },\n  anthropic: { costPerToken: 0.00003 },\n  openai: { costPerToken: 0.00002 }\n};\n```\n\n## Production Deployment\n\n1. **Environment Setup**:\n```bash\ncp .env.multi-provider .env.production\n# Update with production API keys\n```\n\n2. **Security Configuration**:\n- Use environment-specific API keys\n- Set up SSL certificates\n- Configure firewall rules\n- Enable request logging\n\n3. **Monitoring**:\n- Set up provider health checks\n- Configure alerting for failures\n- Monitor API usage and costs\n\n## Troubleshooting\n\n**Provider-Specific Issues:**\n- Verify each API key separately\n- Check rate limits for each provider\n- Test network connectivity to each service\n\n**Routing Issues:**\n- Check template configuration\n- Verify provider availability\n- Review failover logs\n\n**Performance Issues:**\n- Monitor response times per provider\n- Adjust rate limits as needed\n- Consider geographic API endpoints\n\n## Cost Management\n\n- **Free Tiers**: All providers offer generous free tiers\n- **Usage Monitoring**: Built-in usage tracking per provider\n- **Cost Alerts**: Set up billing alerts for each service\n- **Smart Routing**: Automatically route to most cost-effective provider\n\nWith this setup, you'll have a robust, multi-provider AI chatbot that leverages the strengths of each platform while providing seamless failover and intelligent routing!",
    "clonedCount": 892,
    "rating": 4.8,
    "reviewCount": 156,
    "verified": true,
    "previewDemoLink": "https://app-beta.aiml.asu.edu/tutorial-multi-api-setup",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Multi-Provider Setup", "Intelligent Routing", "Failover Protection"],
    "actions": ["Configure", "Deploy", "Monitor"],
    "version": "1.5.0",
    "dateCreated": "2025-01-18",
    "lastUpdated": "2025-01-20",
    "reviews": [
      {
        "user": "Enterprise Architect",
        "rating": 5,
        "comment": "Exactly what we needed for our multi-vendor AI strategy. The failover capabilities are excellent."
      },
      {
        "user": "DevOps Engineer",
        "rating": 5,
        "comment": "Comprehensive guide with great production considerations. The cost optimization features are a bonus."
      },
      {
        "user": "AI Research Lead",
        "rating": 4,
        "comment": "Solid tutorial, though the intelligent routing could use more examples. Overall very helpful."
      }
    ],
    "exampleConversations": [
      {
        "user": "Which AI provider is best for code generation?",
        "assistant": "For code generation, the tutorial covers using GPT-4 for creative coding solutions, Claude for code analysis and debugging, and Gemini for multimodal code tasks involving images or documents."
      },
      {
        "user": "How much does running all three providers cost?",
        "assistant": "All providers offer generous free tiers perfect for development. For production, costs typically range from $10-50/month for moderate usage. The tutorial includes cost monitoring and optimization strategies."
      },
      {
        "user": "What happens if one API goes down?",
        "assistant": "The failover system automatically routes requests to the next available provider. Users experience seamless service while you receive alerts about the outage. No conversations are lost."
      }
    ]
  },
  {
    "id": "tutorial-003",
    "name": "Local Llama Setup - Complete Beginner's Guide",
    "description": "Learn how to download and run Llama models locally on your computer. Perfect for beginners with no technical experience. Covers installation, setup, and basic usage with step-by-step instructions.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Tutorial",
    "tags": ["llama", "local-model", "beginners", "ollama", "setup", "tutorial"],
    "instructionsSnippet": "## Local Llama Setup - Complete Beginner's Guide\n\n**Master local AI deployment with detailed step-by-step instructions. Run powerful AI models on your own computer with complete privacy and control.**\n\n## What is Llama?\n\n🤖 **Llama** is a family of AI language models created by Meta (Facebook). Think of it as having your own personal ChatGPT that runs entirely on your computer - no internet required after setup!\n\n**Why use Llama locally?**\n✅ **Privacy**: Your conversations never leave your computer\n✅ **No costs**: No monthly subscription fees\n✅ **Always available**: Works offline once installed\n✅ **Fast responses**: No waiting for internet servers\n✅ **Customizable**: Modify the AI for your specific needs\n\n## Step 1: Install Ollama (The Easy Way)\n\n**Ollama** is like an app store for AI models - it makes downloading and running AI incredibly simple!\n\n### 1.1 Download Ollama\n\n**For Windows:**\n1. Go to https://ollama.com/\n2. Click **\"Download for Windows\"**\n3. Save the installer file to your Downloads folder\n4. Run the downloaded `.exe` file\n5. Follow the installation wizard (click Next → Next → Install)\n6. Wait for installation to complete (takes 2-3 minutes)\n\n**For Mac:**\n1. Go to https://ollama.com/\n2. Click **\"Download for macOS\"**\n3. Open the downloaded `.dmg` file\n4. Drag the Ollama icon to your Applications folder\n5. Open Finder → Applications → double-click Ollama\n6. Click \"Open\" when macOS asks for permission\n\n**For Linux:**\n1. Open Terminal\n2. Run this command:\n```bash\ncurl -fsSL https://ollama.com/install.sh | sh\n```\n3. Wait for installation to complete\n\n### 1.2 Verify Installation\n1. Open **Terminal** (Mac/Linux) or **Command Prompt** (Windows)\n2. Type: `ollama --version`\n3. **Expected result**: You should see a version number like \"ollama version 0.1.x\"\n\n### 🎥 Complex Concept: Understanding Local AI vs Cloud AI\n### 🎯 [How to Install and Use Ollama LOCALLY](https://www.youtube.com/watch?v=wIfKRi-igQc)\n*Step-by-step installation guide - watch if you encounter issues*\n\n## Step 2: Download Your First AI Model\n\n### 2.1 Choose Your Model Size\n**Important**: Models vary in size and computer requirements:\n\n| Model | Size | RAM Needed | Best For |\n|-------|------|------------|----------|\n| `llama3.2:3b` | 2 GB | 8 GB | Beginners, older computers |\n| `llama3.3:8b` | 4.7 GB | 8 GB | Balanced performance |\n| `llama3.3:70b` | 39 GB | 32 GB | Maximum quality |\n\n### 2.2 Download Process\n1. Open your terminal/command prompt\n2. For beginners, start with the 8B model:\n\n```bash\nollama pull llama3.3:8b\n```\n\n3. **What happens next:**\n   - Download starts immediately (no account needed)\n   - Progress bar shows download status\n   - Takes 10-30 minutes depending on internet speed\n   - Downloads to your computer permanently\n\n### 2.3 Verify Download\n1. List your installed models:\n```bash\nollama list\n```\n\n2. **Expected result**: You should see your downloaded model listed\n\n**💡 Pro Tip**: You can download multiple models and switch between them anytime!\n\n## Step 3: Start Chatting with Your Local AI\n\n### 3.1 Basic Chat Interface\n1. Start a conversation with your downloaded model:\n\n```bash\nollama run llama3.3:8b\n```\n\n2. **You'll see a prompt like this:**\n```\n>>> Send a message (/? for help)\n```\n\n3. **Try your first conversation:**\n   - Type: `Hello! Can you help me write an email?`\n   - Press Enter\n   - Wait for the AI response (first response takes longer)\n\n### 3.2 Understanding the Interface\n**Available commands:**\n- Type normally to chat\n- `/bye` - Exit the chat\n- `/help` - Show all commands\n- `/clear` - Clear conversation history\n- `/save filename` - Save conversation\n\n### 3.3 Test Different Capabilities\n**Try these prompts to test your local AI:**\n\n1. **Writing Help**: \"Write a professional email requesting a meeting\"\n2. **Coding**: \"Write a Python function to calculate fibonacci numbers\"\n3. **Analysis**: \"Explain the benefits of renewable energy in simple terms\"\n4. **Creative**: \"Write a short story about a robot learning to paint\"\n\n## Step 4: Advanced Model Management\n\n### 4.1 Working with Multiple Models\n\n**Download specialized models:**\n```bash\n# For coding tasks\nollama pull codellama:7b\n\n# For creative writing\nollama pull mistral:7b\n\n# For math and reasoning\nollama pull qwen2.5:7b\n```\n\n**Switch between models:**\n```bash\nollama run codellama:7b    # For coding help\nollama run mistral:7b      # For creative tasks\nollama run llama3.3:8b     # For general use\n```\n\n### 4.2 Customizing Model Behavior\n\n**Adjust creativity level:**\n```bash\n# More focused and factual\nollama run llama3.3:8b --temperature 0.1\n\n# More creative and varied\nollama run llama3.3:8b --temperature 0.9\n```\n\n**Set custom system prompts:**\n```bash\nollama run llama3.3:8b --system \"You are a helpful programming tutor. Always explain code step by step.\"\n```\n\n### 4.3 Model Maintenance\n\n**Update all models:**\n```bash\nollama pull --all\n```\n\n**Remove unused models:**\n```bash\nollama rm llama3.2:3b\n```\n\n**Check model details:**\n```bash\nollama show llama3.3:8b\n```\n\n## Step 5: Connect to ASU Local Wrapper\n\n### 5.1 Start Ollama Service\n1. **IMPORTANT**: Before connecting to ASU Wrapper, start the Ollama service:\n\n```bash\nollama serve\n```\n\n2. **Keep this terminal open** - the service runs continuously\n3. **Expected result**: You should see \"Ollama server listening on http://localhost:11434\"\n\n### 5.2 Download ASU Local Wrapper\n1. Open a **new terminal window** (keep the first one running)\n2. Download the wrapper:\n\n```bash\ngit clone https://github.com/danielennis11111/rate-limiter\ncd rate-limiter\nnpm install\n```\n\n### 5.3 Configure for Local Ollama\n1. Create your environment file:\n```bash\ncp .env.example .env\n```\n\n2. Edit the `.env` file and add:\n```env\n# Local Ollama Configuration\nOLLAMA_URL=http://localhost:11434\nOLLAMA_MODEL=llama3.3:8b\nLOCAL_MODEL_ENABLED=true\n\n# Optional: Disable cloud APIs if using only local\nOPENAI_API_KEY=\nGEMINI_API_KEY=\nANTHROPIC_API_KEY=\n\n# Server settings\nPORT=3000\nRATE_LIMIT_PER_MINUTE=30\n```\n\n### 5.4 Start the Beautiful Interface\n1. Launch the web interface:\n```bash\nnpm run dev\n```\n\n2. Open your browser to **http://localhost:3000**\n3. **You now have**: Beautiful ASU interface + Local Llama AI + Complete privacy!\n\n## Hardware Requirements\n\n### 📊 System Requirements Guide\n\n**Minimum Setup (Basic Models):**\n- **RAM**: 8 GB\n- **Storage**: 20 GB free space\n- **Processor**: Any modern CPU (Intel i5/AMD Ryzen 5 or better)\n- **Internet**: Only for initial download\n\n**Recommended Setup (Better Performance):**\n- **RAM**: 16 GB\n- **Storage**: 100 GB SSD\n- **Processor**: Intel i7/AMD Ryzen 7 or better\n- **GPU**: Optional but speeds up responses significantly\n\n**High-End Setup (Large Models):**\n- **RAM**: 32 GB or more\n- **Storage**: 200 GB+ NVMe SSD\n- **GPU**: NVIDIA RTX 4060 or better with 16 GB+ VRAM\n- **CPU**: Intel i9/AMD Ryzen 9\n\n### ⚡ Performance Optimization Tips\n\n1. **Use SSD storage** for faster model loading\n2. **Close other applications** while using AI\n3. **Restart Ollama** if responses become slow\n4. **Use smaller models** on older hardware\n5. **Enable GPU acceleration** if available\n\n## Popular Models to Try\n\n### 🏆 **Best for Beginners**\n\n**Llama 3.3 (8B)** - `ollama pull llama3.3:8b`\n- **Best for**: General conversations, writing, basic coding\n- **Size**: 4.7 GB\n- **Quality**: Excellent balance of speed and capability\n\n**Llama 3.2 (3B)** - `ollama pull llama3.2:3b`\n- **Best for**: Older computers, quick responses\n- **Size**: 2 GB\n- **Quality**: Good for basic tasks\n\n### 🎯 **Specialized Models**\n\n**CodeLlama (7B)** - `ollama pull codellama:7b`\n- **Best for**: Programming, debugging, code explanation\n- **Size**: 3.8 GB\n- **Special features**: Understands 15+ programming languages\n\n**Mistral (7B)** - `ollama pull mistral:7b`\n- **Best for**: Creative writing, storytelling, multilingual\n- **Size**: 4.1 GB\n- **Special features**: Excellent at following complex instructions\n\n**Qwen2.5 (7B)** - `ollama pull qwen2.5:7b`\n- **Best for**: Math, reasoning, analysis\n- **Size**: 4.1 GB\n- **Special features**: Superior logical reasoning\n\n### 🚀 **Advanced Models (Powerful Computers Only)**\n\n**Llama 3.3 (70B)** - `ollama pull llama3.3:70b`\n- **Best for**: Professional use, complex analysis\n- **Size**: 39 GB\n- **Requirements**: 32 GB+ RAM\n\n## Troubleshooting Common Issues\n\n### ❌ \"Command not found: ollama\"\n**Symptoms**: Terminal says ollama command doesn't exist\n**Solutions**:\n1. **Restart your terminal** after installation\n2. **Windows**: Try running Command Prompt as Administrator\n3. **Mac**: Check if Ollama is in Applications folder\n4. **Linux**: Run `source ~/.bashrc` or restart terminal\n5. **Re-install** if problem persists\n\n### ❌ Download Fails or Stops\n**Symptoms**: Model download gets stuck or fails\n**Solutions**:\n1. **Check internet connection** - models are large files\n2. **Free up disk space** - ensure you have enough storage\n3. **Try a smaller model first** (3B instead of 8B)\n4. **Restart the download** - Ollama resumes where it left off\n5. **Check firewall settings** - ensure Ollama can access internet\n\n### ❌ Model Runs Very Slowly\n**Symptoms**: AI takes forever to respond or gives short answers\n**Solutions**:\n1. **Close other applications** to free up RAM\n2. **Try a smaller model** (3B instead of 8B or 70B)\n3. **Restart Ollama service**: `ollama serve`\n4. **Check available RAM**: Task Manager (Windows) or Activity Monitor (Mac)\n5. **Consider hardware upgrade** if consistently slow\n\n### ❌ \"Connection refused\" or \"Can't connect to localhost\"\n**Symptoms**: ASU Wrapper can't connect to Ollama\n**Solutions**:\n1. **Ensure Ollama service is running**: `ollama serve`\n2. **Check the URL** in .env file: `OLLAMA_URL=http://localhost:11434`\n3. **Restart Ollama service** and try again\n4. **Check firewall settings** - allow localhost connections\n5. **Try different port** if 11434 is blocked\n\n### ❌ Out of Memory Errors\n**Symptoms**: System freezes or \"out of memory\" messages\n**Solutions**:\n1. **Use smaller models** - try 3B instead of 8B\n2. **Close other applications** before running AI\n3. **Restart your computer** to free up memory\n4. **Check system requirements** for your chosen model\n5. **Consider RAM upgrade** for larger models\n\n## Comparing Local Llama vs Cloud AI\n\n| Feature | Local Llama (Ollama) | ChatGPT/Cloud AI |\n|---------|---------------------|------------------|\n| **Privacy** | 🟢 100% private | 🔴 Data sent to companies |\n| **Cost** | 🟢 Free forever | 🔴 $20-100/month |\n| **Internet** | 🟢 Works offline | 🔴 Requires internet |\n| **Speed** | 🟡 Depends on hardware | 🟢 Usually fast |\n| **Customization** | 🟢 Fully customizable | 🔴 Limited options |\n| **Setup** | 🟡 30-60 minutes | 🟢 Instant |\n| **Updates** | 🟡 Manual | 🟢 Automatic |\n| **Quality** | 🟢 Excellent | 🟢 Excellent |\n\n## Advanced Tips & Tricks\n\n### 🎯 **Conversation Techniques**\n\n**For better responses, try:**\n- **Be specific**: \"Write a Python function to sort a list\" vs \"Help with coding\"\n- **Set context**: \"As a data scientist, help me analyze this dataset...\"\n- **Use examples**: \"Write an email like this: [example]\"\n- **Break complex tasks**: Ask for step-by-step breakdowns\n\n### 🛠️ **Customization Options**\n\n**Create custom model variations:**\n```bash\n# Create a specialized coding assistant\nollama create my-coder --file Modelfile\n```\n\n**Where Modelfile contains:**\n```\nFROM llama3.3:8b\nSYSTEM You are an expert programmer who explains code clearly and provides examples.\nTEMPERATURE 0.3\n```\n\n### ⚡ **Performance Optimization**\n\n**Speed up responses:**\n1. **Use GPU acceleration** if available\n2. **Increase system RAM** for larger models\n3. **Use SSD storage** for faster model loading\n4. **Close browser tabs** and other memory-intensive apps\n5. **Set CPU priority** for Ollama process\n\n## Next Steps\n\n### 🚀 **Immediate Actions:**\n1. ✅ Test different models for various tasks\n2. ✅ Experiment with temperature settings\n3. ✅ Try the ASU Wrapper interface\n4. ✅ Create custom system prompts\n\n### 🛠️ **Advanced Setup:**\n- Set up multiple specialized models for different tasks\n- Create custom Modelfiles for specific use cases\n- Configure GPU acceleration for faster responses\n- Set up automated model updates\n\n### 🏢 **Team Deployment:**\n- Install on a shared server for team access\n- Set up the ASU Wrapper with authentication\n- Configure rate limiting and usage monitoring\n- Create team-specific conversation templates\n\n### 📚 **Learn More:**\n- Try our **Multi-API Tutorial** to combine local and cloud AI\n- Check out **ASU Wrapper User Guide** for advanced features\n- Explore **Ollama documentation** for expert-level customization\n\n**🎉 Congratulations!** You now have your own private AI assistant running locally. No subscriptions, no data sharing, complete control!\n\n**Remember**: Local AI gives you complete privacy and control - perfect for sensitive work, personal projects, or situations where internet access is limited.",
    "clonedCount": 156,
    "rating": 4.9,
    "reviewCount": 45,
    "verified": true,
    "previewDemoLink": "https://ollama.com/",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Step-by-Step Setup", "Beginner Friendly", "Offline AI"],
    "actions": ["Install", "Download", "Chat"],
    "version": "1.0.0",
    "dateCreated": "2025-01-22",
    "lastUpdated": "2025-01-22",
    "reviews": [
      {
        "user": "Complete Beginner",
        "rating": 5,
        "comment": "I had no idea about AI or tech, but this guide got me running my own AI in 2 hours! Amazing!"
      },
      {
        "user": "Privacy Advocate",
        "rating": 5,
        "comment": "Finally, an AI that doesn't send my data to big tech companies. Setup was easier than expected."
      },
      {
        "user": "CS Student",
        "rating": 5,
        "comment": "Great resource for learning about local AI deployment. The hardware requirements section was particularly helpful."
      }
    ],
    "exampleConversations": [
      {
        "user": "How long does it take to download a model?",
        "assistant": "For the 8B model (like llama3.3), it's about 4.7 GB so typically 10-30 minutes depending on your internet speed. You only download once, then it's instant to use!"
      },
      {
        "user": "Will this work on my old laptop?",
        "assistant": "If your laptop has 8 GB RAM and was made in the last 5 years, it should work fine with smaller models. Try llama3.2:3b first - it's faster and uses less memory."
      },
      {
        "user": "Is this really free forever?",
        "assistant": "Yes! Once you download the model, there are no subscription fees or usage limits. It runs entirely on your computer with no ongoing costs."
      }
    ]
  },
  {
    "id": "tutorial-004", 
    "name": "What is Ollama? Complete Beginner's Guide",
    "description": "Learn what Ollama is, why it's revolutionary for running AI locally, and how it makes artificial intelligence accessible to everyone. Perfect introduction for non-technical users.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Tutorial",
    "tags": ["ollama", "introduction", "ai-basics", "local-ai", "beginners"],
    "instructionsSnippet": "## 📹 Must-Watch Videos\n\n**Understanding Ollama - Essential viewing for beginners:**\n\n### 🎯 [What is Ollama? Introduction for Beginners](https://www.youtube.com/watch?v=6VQbnEQzZhE)\n*Perfect introduction explaining what Ollama is and why it matters*\n\n### 🚀 [Ollama in 100 Seconds](https://www.youtube.com/watch?v=7a52Oj5PcCg)\n*Quick overview of Ollama's capabilities and benefits*\n\n### 💡 [Why You Need Ollama in 2024](https://www.youtube.com/watch?v=Hb_2NfWELJ8)\n*Explains the importance of local AI and how Ollama makes it accessible*\n\n### 🔧 [Ollama vs ChatGPT: Which Should You Choose?](https://www.youtube.com/watch?v=L4mjqSfloVQ)\n*Comparison to help you understand when to use each option*\n\n---\n\n## What is Ollama?\n\n🤖 **Ollama** is like having your own personal app store for artificial intelligence. Just like you download apps on your phone, Ollama lets you easily download and run AI models on your computer.\n\n**Think of it this way:**\n- **ChatGPT** = Streaming service (you need internet, pay monthly)\n- **Ollama** = Downloaded movies (works offline, yours forever)\n\n## Why Ollama is Revolutionary\n\n### 🏠 **Your AI, Your Rules**\n- No internet required after setup\n- Complete privacy - conversations never leave your computer\n- No monthly fees or usage limits\n- Customize the AI for your specific needs\n\n### 🎯 **Made for Everyone**\nBefore Ollama, running AI locally required:\n- PhD in computer science\n- Complex coding and configurations\n- Hours of troubleshooting\n\nWith Ollama:\n- Install like any normal app\n- Download AI with one command\n- Start chatting immediately\n\n### 🚀 **Professional Quality**\n- Same AI models used by big companies\n- Performance comparable to ChatGPT\n- Constantly updated with latest models\n\n## What Can You Do with Ollama?\n\n### 📝 **Writing Assistant**\n- Write emails, letters, reports\n- Proofread and edit documents\n- Generate creative content\n- Translate languages\n\n### 💻 **Coding Helper**\n- Write and debug code\n- Explain programming concepts\n- Review and optimize code\n- Learn new programming languages\n\n### 🎓 **Personal Tutor**\n- Explain complex topics\n- Help with homework\n- Practice conversations\n- Learn new skills\n\n### 🔍 **Research Assistant**\n- Analyze documents\n- Summarize information\n- Answer questions\n- Generate ideas\n\n## How Ollama Works (Simple Explanation)\n\n**1. Download Ollama App**\n- Just like downloading Chrome or Word\n- One-time installation\n\n**2. Choose Your AI Model**\n- Browse available models\n- Pick based on your needs and computer specs\n\n**3. Download the Model**\n- AI model downloads to your computer\n- Like downloading a big video file\n\n**4. Start Using**\n- Type questions, get answers\n- Works just like ChatGPT\n- But everything happens on your computer\n\n## Available AI Models\n\n### 🏆 **Most Popular (Recommended for Beginners)**\n\n**Llama 3.3 (8B)**\n- Made by Meta (Facebook)\n- Great for general conversations\n- Good balance of speed and quality\n- Size: 4.7 GB\n\n**Mistral 7B**\n- European AI model\n- Excellent for creative writing\n- Fast and efficient\n- Size: 4.1 GB\n\n**CodeLlama 7B**\n- Specialized for programming\n- Explains code clearly\n- Helps debug problems\n- Size: 3.8 GB\n\n### 🎯 **Specialized Models**\n\n**Gemma 7B** (Google)\n- Made by Google DeepMind\n- Great for reasoning tasks\n- Excellent safety features\n- Size: 4.8 GB\n\n**Qwen 7B** (Alibaba)\n- Strong in multiple languages\n- Excellent for math and science\n- Fast response times\n- Size: 4.1 GB\n\n### 🚀 **Advanced Models (Powerful Computers)**\n\n**Llama 3.3 (70B)**\n- Highest quality responses\n- Requires 32 GB+ RAM\n- Size: 39 GB\n\n**Mixtral 8x7B**\n- Multiple AI experts in one\n- Excellent for complex tasks\n- Size: 26 GB\n\n## Ollama vs Other Options\n\n| Feature | Ollama | ChatGPT Plus | Google Bard | Claude |\n|---------|---------|--------------|-------------|--------|\n| **Cost** | Free | $20/month | Free/Paid | $20/month |\n| **Privacy** | 100% Private | Data collected | Data collected | Data collected |\n| **Internet** | Not needed | Required | Required | Required |\n| **Customization** | Full control | Limited | Limited | Limited |\n| **Setup** | 30 minutes | Instant | Instant | Instant |\n| **Quality** | Excellent | Excellent | Good | Excellent |\n\n## Real-World Use Cases\n\n### 🏢 **For Businesses**\n- **Legal Firms**: Review contracts privately\n- **Healthcare**: Analyze patient data securely\n- **Education**: Create custom tutoring systems\n- **Marketing**: Generate content without data leaks\n\n### 👨‍💼 **For Professionals**\n- **Writers**: Brainstorm and edit privately\n- **Developers**: Code review without sharing proprietary code\n- **Researchers**: Analyze sensitive documents\n- **Consultants**: Work with confidential client data\n\n### 🏠 **For Personal Use**\n- **Students**: Study assistant that works offline\n- **Parents**: Help kids with homework safely\n- **Hobbyists**: Creative writing and art projects\n- **Privacy-conscious users**: No data tracking\n\n## Getting Started Today\n\n### ⚡ **Quick Start (15 minutes)**\n1. Go to https://ollama.com/\n2. Download for your operating system\n3. Install like any normal app\n4. Open terminal/command prompt\n5. Type: `ollama run llama3.3`\n6. Wait for download (10-20 minutes)\n7. Start chatting!\n\n### 🎯 **First Conversation Ideas**\n- \"Help me write a professional email\"\n- \"Explain quantum physics in simple terms\"\n- \"Write a short story about a robot\"\n- \"Help me plan a healthy meal for this week\"\n\n## Common Questions\n\n**Q: Do I need to be technical to use Ollama?**\nA: Not at all! If you can install apps and type, you can use Ollama.\n\n**Q: Will it slow down my computer?**\nA: Only while you're actively using it. Modern computers handle it well.\n\n**Q: How much space does it take?**\nA: Models range from 2-40 GB. Most popular ones are 4-5 GB.\n\n**Q: Can I use multiple models?**\nA: Yes! Download as many as you want and switch between them.\n\n**Q: Is it really as good as ChatGPT?**\nA: For most tasks, yes! Some models even outperform ChatGPT in specific areas.\n\n**Q: What if I need help?**\nA: Great community support on Discord, Reddit, and GitHub.\n\n## The Future is Local\n\n🌟 **Why Local AI Matters:**\n- **Privacy**: Your thoughts and ideas stay private\n- **Control**: Customize AI for your exact needs\n- **Independence**: No reliance on big tech companies\n- **Innovation**: Experiment and learn without limits\n\n**Ollama is making this future accessible to everyone - not just tech experts!**\n\n## Ready to Start?\n\n🎬 **Watch the videos above for visual guidance**\n🔗 **Visit https://ollama.com/ to download**\n📚 **Check out our other tutorials for specific models**\n💬 **Join the ASU AI community for support**\n\n**Remember**: You're not just using AI - you're taking control of it!",
    "clonedCount": 89,
    "rating": 4.8,
    "reviewCount": 27,
    "verified": true,
    "previewDemoLink": "https://ollama.com/",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": false,
    "capabilities": ["Introduction to AI", "Local Deployment", "Privacy-Focused"],
    "actions": ["Learn", "Understand", "Explore"],
    "version": "1.0.0",
    "dateCreated": "2025-01-22",
    "lastUpdated": "2025-01-22",
    "reviews": [
      {
        "user": "Tech Newbie",
        "rating": 5,
        "comment": "Finally someone explained AI in terms I can understand! This convinced me to try local AI."
      },
      {
        "user": "Privacy Advocate",
        "rating": 5,
        "comment": "Great explanation of why local AI matters. The comparison table was very helpful."
      },
      {
        "user": "Business Owner",
        "rating": 4,
        "comment": "Helpful overview, though I'd like more business-specific examples. Still very informative."
      }
    ],
    "exampleConversations": [
      {
        "user": "Is Ollama really free forever?",
        "assistant": "Yes! Ollama itself is completely free and open-source. You download AI models once and use them forever with no subscription fees or usage limits."
      },
      {
        "user": "What's the catch with local AI?",
        "assistant": "The main tradeoffs are: initial setup time (30 minutes), storage space (4-40 GB per model), and potentially slower responses on older computers. But you gain complete privacy and control!"
      },
      {
        "user": "Can I use this for business?",
        "assistant": "Absolutely! Many businesses use Ollama for sensitive work since data never leaves their premises. It's perfect for legal, healthcare, finance, and any industry with privacy requirements."
      }
    ]
  },
  {
    "id": "tutorial-005",
    "name": "Using ASU Local Wrapper - Complete User Guide", 
    "description": "Master the ASU Local Wrapper interface designed for enterprise AI deployment. Learn rate limiting, voice features, file uploads, templates, and security. Perfect for teams and organizations.",
    "creator": {
      "name": "ASU Enterprise Technology",
      "avatar": "/asu-logo.png"
    },
    "category": "Tutorial",
    "tags": ["asu-wrapper", "enterprise", "interface", "rate-limiting", "security"],
    "instructionsSnippet": "## 📹 Visual Walkthrough Videos\n\n**Master the ASU Local Wrapper with these step-by-step guides:**\n\n### 🎯 [ASU Local Wrapper Demo - Live Interface Tour](https://danielennis11111.github.io/rate-limiter/)\n*Interactive demo of the actual interface - try it yourself!*\n\n### 🚀 [Enterprise AI Deployment Best Practices](https://www.youtube.com/watch?v=9YnO5-91Cxs)\n*Professional setup and deployment strategies for organizations*\n\n### 💡 [API Rate Limiting and Security Best Practices](https://www.youtube.com/watch?v=RhVjjGlJ9pM)\n*Understanding enterprise security features and controls*\n\n### 🔧 [Voice AI Integration Tutorial](https://www.youtube.com/watch?v=h2k7r_5kLTI)\n*Advanced features: speech-to-text, file processing, and multimodal AI*\n\n---\n\n## What is the ASU Local Wrapper?\n\n🏢 The **ASU Local Wrapper** is an enterprise-grade interface for running AI models locally with professional features:\n\n**Key Benefits:**\n✅ **Enterprise Security** - Rate limiting, audit logs, user controls\n✅ **Beautiful Interface** - Professional design with ASU branding\n✅ **Multiple AI Providers** - OpenAI, Anthropic, Google Gemini, Local models\n✅ **Advanced Features** - Voice chat, file uploads, conversation templates\n✅ **Team Ready** - Multi-user support with admin controls\n\n## Core Features Overview\n\n### 🛡️ **Enterprise Security**\n- **Rate Limiting**: 15 requests/minute per user (configurable)\n- **User Authentication**: Secure login with ASU credentials\n- **Audit Logging**: Complete conversation history and usage tracking\n- **Data Privacy**: All conversations encrypted and stored locally\n- **API Key Management**: Secure credential storage and rotation\n\n### 🎯 **Smart Templates**\nPre-configured AI assistants for common tasks:\n- **General Assistant** - Everyday questions and tasks\n- **Creative Writing** - Stories, poetry, creative content\n- **Programming Mentor** - Code help and debugging\n- **Academic Tutor** - Study help and explanations\n- **Research Assistant** - Data analysis and research\n- **Language Learning** - Practice conversations and grammar\n- **Business Advisor** - Strategy and professional guidance\n- **Health & Wellness** - Fitness and nutrition advice\n- **Technical Support** - IT help and troubleshooting\n- **Data Analyst** - Charts, graphs, and data insights\n- **Project Manager** - Planning and organization\n\n### 🎤 **Voice Interaction**\n- **Speech-to-Text**: Speak your questions naturally\n- **Text-to-Speech**: Hear AI responses aloud\n- **Hands-Free Mode**: Complete voice-only conversations\n- **Multiple Languages**: Support for 40+ languages\n\n### 📁 **File Upload & Processing**\n- **PDF Analysis**: Upload and analyze documents\n- **Image Processing**: Describe, analyze, and extract text from images\n- **Data Files**: Process CSV, Excel, and text files\n- **Secure Handling**: Files processed locally, never uploaded to external services\n\n## Getting Started\n\n### Step 1: Access the Interface\n\n**Online Demo**: [https://danielennis11111.github.io/rate-limiter/](https://danielennis11111.github.io/rate-limiter/)\n\n**Local Installation**:\n```bash\ngit clone https://github.com/danielennis11111/rate-limiter\ncd rate-limiter\nnpm install\nnpm run dev\n```\n\n### Step 2: Configure Your API Keys\n\nIn the **Settings** panel (gear icon), add your API keys:\n\n```env\n# OpenAI (ChatGPT)\nOPENAI_API_KEY=sk-...\n\n# Anthropic (Claude) \nANTHROPIC_API_KEY=sk-ant-...\n\n# Google Gemini\nGEMINI_API_KEY=AI...\n\n# Local Ollama (if running locally)\nOLLAMA_URL=http://localhost:11434\n```\n\n### Step 3: Choose Your Template\n\nClick on any template card to start:\n- Each template has specialized prompts\n- Templates are color-coded by category\n- Hover for detailed descriptions\n\n## Using Core Features\n\n### 💬 **Basic Chat**\n\n1. **Select Template**: Click any template card\n2. **Type Message**: Use the text box at bottom\n3. **Send**: Click send button or press Enter\n4. **View Response**: AI response appears in chat area\n5. **Continue Conversation**: Keep chatting naturally\n\n### 🎤 **Voice Features**\n\n**To Use Speech-to-Text:**\n1. Click the microphone icon next to text input\n2. Allow microphone access when prompted\n3. Speak your question clearly\n4. Click stop when finished\n5. Review text, edit if needed, then send\n\n**To Hear AI Responses:**\n1. Click the speaker icon on any AI response\n2. Adjust volume using browser controls\n3. Pause/resume with the audio controls\n\n### 📁 **File Upload**\n\n**Supported File Types:**\n- **PDFs**: Documents, reports, research papers\n- **Images**: JPG, PNG, GIF, WebP\n- **Text Files**: TXT, DOC, CSV\n\n**Upload Process:**\n1. Click the paperclip icon in text input\n2. Select file from your computer\n3. Wait for upload indicator\n4. Ask questions about the file content\n5. AI can analyze, summarize, or answer questions\n\n**Example prompts after upload:**\n- \"Summarize this document\"\n- \"What are the key points?\"\n- \"Extract all the important data\"\n- \"Translate this to Spanish\"\n\n### ⚙️ **Rate Limiting Dashboard**\n\n**Understanding Your Limits:**\n- **Default**: 15 requests per minute\n- **Counter**: Shows requests used/remaining\n- **Reset Timer**: Shows when limits reset\n- **Visual Indicator**: Color changes as you approach limit\n\n**When Rate Limited:**\n- Red warning appears\n- Timer shows reset time\n- Can still browse conversation history\n- Limits reset automatically\n\n### 📊 **Conversation Management**\n\n**Sidebar Features:**\n- **Recent Conversations**: Quick access to chat history\n- **Search**: Find specific conversations\n- **Export**: Download conversation as text/PDF\n- **Delete**: Remove conversations (local only)\n- **Archive**: Organize old conversations\n\n**Conversation Actions:**\n- **Copy Response**: Click copy icon on any message\n- **Regenerate**: Ask AI to try again with different response\n- **Edit Message**: Modify your questions after sending\n- **Branch Conversation**: Create alternative conversation paths\n\n## Advanced Configuration\n\n### 🔧 **Admin Settings**\n\n**Rate Limiting**:\n```env\nRATE_LIMIT_PER_MINUTE=15\nRATE_LIMIT_PER_HOUR=300\nRATE_LIMIT_PER_DAY=1000\n```\n\n**Security**:\n```env\nREQUIRE_AUTH=true\nSSO_ENABLED=true\nAUDIT_LOGGING=true\nENCRYPT_CONVERSATIONS=true\n```\n\n**AI Provider Preferences**:\n```env\nDEFAULT_PROVIDER=gemini\nFAILOVER_ENABLED=true\nLOAD_BALANCING=round_robin\n```\n\n### 🎨 **Customization**\n\n**Branding**:\n- Logo replacement in `/assets/`\n- Color scheme in `tailwind.config.js`\n- Company name in environment variables\n\n**Templates**:\n- Add custom templates in `/src/data/templates.js`\n- Modify existing prompts\n- Create department-specific templates\n\n**Features**:\n- Enable/disable voice features\n- Customize file upload limits\n- Adjust UI components\n\n## Enterprise Deployment\n\n### 🏢 **Production Setup**\n\n**Server Requirements:**\n- **CPU**: 4+ cores\n- **RAM**: 8 GB minimum (16 GB recommended)\n- **Storage**: 100 GB SSD\n- **Network**: 100 Mbps internet\n\n**Security Hardening:**\n1. Enable HTTPS with SSL certificates\n2. Configure firewall rules\n3. Set up VPN access for remote users\n4. Enable database encryption\n5. Configure backup systems\n6. Set up monitoring and alerting\n\n**Scaling Options:**\n- **Load Balancer**: Distribute traffic across multiple servers\n- **Database Clustering**: High availability for conversation storage\n- **CDN**: Faster asset delivery\n- **Auto-scaling**: Handle traffic spikes automatically\n\n### 👥 **User Management**\n\n**Authentication Methods:**\n- **SSO Integration**: SAML, OAuth, LDAP\n- **ASU Login**: Direct integration with ASU credentials\n- **Local Accounts**: Self-contained user management\n- **API Keys**: Programmatic access for integrations\n\n**Permission Levels:**\n- **Admin**: Full system control and user management\n- **Power User**: Extended rate limits and advanced features\n- **Standard User**: Basic chat and file upload\n- **Read-Only**: View conversations, no AI interaction\n\n### 📈 **Analytics & Monitoring**\n\n**Usage Metrics:**\n- Requests per user/department\n- Most popular templates\n- Response time analytics\n- Error rate monitoring\n- Cost tracking per AI provider\n\n**Security Monitoring:**\n- Failed login attempts\n- Unusual usage patterns\n- File upload activity\n- API key usage\n\n## Best Practices\n\n### 🎯 **For Administrators**\n\n1. **Start Small**: Begin with limited user group\n2. **Monitor Usage**: Watch for abuse or unexpected patterns\n3. **Regular Backups**: Automated conversation backups\n4. **Update Keys**: Rotate API keys quarterly\n5. **Train Users**: Provide onboarding and training\n\n### 👤 **For End Users**\n\n1. **Be Specific**: Clear, detailed questions get better answers\n2. **Use Templates**: Start with appropriate template for your task\n3. **Respect Limits**: Don't spam requests\n4. **Review Responses**: AI isn't perfect, verify important information\n5. **Protect Sensitive Data**: Don't share confidential information\n\n### 🔒 **Security Guidelines**\n\n1. **Never Share API Keys**: Keep credentials secure\n2. **Use HTTPS**: Always access over secure connections\n3. **Regular Updates**: Keep system updated with latest security patches\n4. **Access Control**: Limit access to necessary users only\n5. **Audit Regularly**: Review logs and usage patterns\n\n## Troubleshooting\n\n### ❌ **Common Issues**\n\n**\"API Key Invalid\":**\n- Check key format and spelling\n- Verify key hasn't expired\n- Ensure proper permissions on the key\n\n**\"Rate Limit Exceeded\":**\n- Wait for reset timer\n- Check if admin can increase limits\n- Spread requests over longer time period\n\n**\"File Upload Failed\":**\n- Check file size (max 10 MB)\n- Verify supported file type\n- Try different file format\n\n**\"Voice Not Working\":**\n- Allow microphone permissions\n- Check browser compatibility\n- Test with different browser\n\n**\"Slow Responses\":**\n- Check internet connection\n- Try different AI provider\n- Contact admin about server performance\n\n## Support & Resources\n\n🔗 **Links:**\n- **Live Demo**: [https://danielennis11111.github.io/rate-limiter/](https://danielennis11111.github.io/rate-limiter/)\n- **GitHub Repository**: [https://github.com/danielennis11111/rate-limiter](https://github.com/danielennis11111/rate-limiter)\n- **Documentation**: Check README.md in repository\n- **Issues**: Report bugs on GitHub Issues page\n\n💬 **Getting Help:**\n- Check documentation first\n- Search existing GitHub issues\n- Contact your system administrator\n- Create new issue with detailed description\n\n**The ASU Local Wrapper puts enterprise-grade AI at your fingertips while maintaining complete control over your data and usage!**",
    "clonedCount": 234,
    "rating": 4.9,
    "reviewCount": 78,
    "verified": true,
    "previewDemoLink": "https://danielennis11111.github.io/rate-limiter/",
    "canBeCloned": true,
    "feedbackWanted": true,
    "asuriteSpecific": true,
    "capabilities": ["Enterprise Features", "Security Controls", "Multi-User Support"],
    "actions": ["Deploy", "Configure", "Manage"],
    "version": "2.0.0",
    "dateCreated": "2025-01-22", 
    "lastUpdated": "2025-01-22",
    "reviews": [
      {
        "user": "IT Director",
        "rating": 5,
        "comment": "Exactly what we needed for enterprise AI deployment. The security features and user management are excellent."
      },
      {
        "user": "Faculty Member", 
        "rating": 5,
        "comment": "The interface is intuitive and the templates are perfect for academic use. Students love the voice features."
      },
      {
        "user": "System Administrator",
        "rating": 5,
        "comment": "Easy to deploy and manage. The monitoring features help us track usage and maintain security compliance."
      }
    ],
    "exampleConversations": [
      {
        "user": "How do I set up rate limiting for different user groups?",
        "assistant": "You can configure different rate limits in the admin panel by user role. For example, set faculty to 30 requests/minute and students to 15 requests/minute using the user management interface."
      },
      {
        "user": "Can we integrate this with our existing SSO system?",
        "assistant": "Yes! The wrapper supports SAML, OAuth, and LDAP integration. Check the enterprise deployment section for configuration details, or use ASU's built-in authentication system."
      },
      {
        "user": "What's the best template for research assistance?",
        "assistant": "The 'Research Assistant' template is optimized for academic research with prompts for literature review, data analysis, and citation help. The 'Data Analyst' template is great for statistical work."
      }
    ]
  }
] 